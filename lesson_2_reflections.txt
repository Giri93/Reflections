What happens when you initialize a repository? Why do you need to do it?
Initializing a repository helps in making a directory to a git repository so that the history of each commit to that repository can be tracked.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is the stage of a repository before commit. Staging area allows us to add desired num of files to a commit.

How can you use the staging area to make sure you have one commit per logical change?
By using the git diff --staged we can get to know the differences between the staging area and the latest commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches help in experimenting without affecting the existing master branch. Naming each branch appropriately will help us in tracking the history of the code easily.

How do the diagrams help you visualize the branch structure?
Branch diagram of repository shows the purpose of a branch, last commit of each branch and comes handy if we want to include the changes in one branch to another.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches includes the changes in one to the checked out branch using the recursion strategy. Representing it in the diagram helps in visualising the two branches seperately and their commits. If any changes are to be made after the merge, it would be easy to find out where to change.